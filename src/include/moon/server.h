/**
 * @brief      A dead-simple implementation of a moon server
 *
 *             The focus of this implementation is on simplicity and zero-copy
 *             data where possible. It is a singleton implementation where the
 *             server and transport layer have internal, private state. This
 *             state is initialized through the *_init() call; there is a chain
 *             of *_init() calls through each layer (server -> transport ->
 *             (transport-specific)).
 *
 *             The memory footprint of this implementation is fully static,
 *             there is no dynamic memory allocation. The server provides a
 *             small memory pool for use by the codec for expanding packed
 *             arguments out of the transport buffer; however, the pool is
 *             statically allocated and sized for worst-case argument expansion.
 *
 *             The "moon_config.h" header is generated by the generator tool
 *             (tbd) and contains configuration related to the IDL (for example,
 *             maximum message length).
 *
 *             This implementation is *non-blocking* - it does *not* wait for
 *             data to be available from the transport layer.
 *
 * @author     Logan Smith <logan@openlunar.org>
 * @date       2020
 */


#ifdef __cplusplus
	extern "C" {
#endif

#ifndef MOON_SERVER_H
#define MOON_SERVER_H

#include "moon/common.h"

#include <stdint.h>

moon_ret_t moon_server_init();

// Non-blocking server call
moon_ret_t moon_server_poll();


// This is the prototype for the function implemented in the generated file
// "moon/generated/services.c" which handles the "service_id" component of the
// message header. If the service_id in the message is not available on this
// system then MOON_RET_E_NO_SERVICE is returned. Additional errors returned:
// - MOON_RET_E_NO_METHOD - If the service is available but the method is not
//   available then it will return
// - MOON_RET_E_NO_SYNTAX - The service and method requested exist but the
//   syntax of the message (e.g. message length) is wrong
// - ...

//
moon_ret_t moon_services_handler( moon_msg_t * message );

#endif // MOON_SERVER_H
